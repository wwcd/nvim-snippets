{
  "go-restful method declaration": {
    "prefix": "rfm",
    "body": [
      "func (${1:receiver} ${2:type}) ${3:method}(request *restful.Request, response *restful.Response) {",
      "\t$0",
      "}"
    ],
    "description": "Snippet for go-restful method declaration"
  },
  "go-restful func declaration": {
    "prefix": "rff",
    "body": [
      "func $1(request *restful.Request, response *restful.Response) {",
      "\t$0",
      "}"
    ],
    "description": "Snippet for go-restfun function declaration"
  },
  "cobra main": {
    "prefix": "ccm",
    "body": [
      "var rootCmd = cobra.Command{",
      "\tUse:   \"$1\",",
      "\tShort: \"$2\",",
      "\tVersion: func() string {",
      "\t\tbi, _ := debug.ReadBuildInfo()",
      "\t\tvcs := \"\"",
      "\t\tvcsRevision := \"\"",
      "\t\tvcsTime := \"\"",
      "\t\tvcsModified := false",
      "\t\tfor _, v := range bi.Settings {",
      "\t\t\tswitch v.Key {",
      "\t\t\tcase \"vcs\":",
      "\t\t\t\tvcs = v.Value",
      "\t\t\tcase \"vcs.revision\":",
      "\t\t\t\tif len(v.Value) > 7 {",
      "\t\t\t\t\tvcsRevision = v.Value[:7]",
      "\t\t\t\t} else {",
      "\t\t\t\t\tvcsRevision = v.Value",
      "\t\t\t\t}",
      "\t\t\tcase \"vcs.time\":",
      "\t\t\t\tvcsTime = v.Value",
      "\t\t\tcase \"vcs.modified\":",
      "\t\t\t\tvcsModified = v.Value == \"true\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tif vcsModified {",
      "\t\t\tvcsRevision += \"-dirty\"",
      "\t\t}",
      "\t\treturn fmt.Sprintf(\"%s-%s compiled by %s at %s\", vcs, vcsRevision, bi.GoVersion, vcsTime)",
      "\t}(),",
      "}",
      "",
      "func main() {",
      "\trootCmd.PersistentFlags().BoolP(\"verbose\", \"v\", false, \"verbose output\")",
      "\trootCmd.Execute()",
      "}"
    ],
    "description": "Snippet for cobra main"
  },
  "cobra cmd": {
    "prefix": "ccs",
    "body": [
      "func init() {",
      "\tcmd := &cobra.Command{",
      "\t\tUse:   \"$1\",",
      "\t\tShort: \"$2\",",
      "\t\tRun:   ${3:cmdFunc},",
      "\t}",
      "",
      "\trootCmd.AddCommand(cmd)",
      "}",
      "",
      "func ${3:cmdFunc}(cmd *cobra.Command, args []string) {",
      "\t$0",
      "}"
    ],
    "description": "Snippet for cobra cmd"
  },
  "cobra cmd flag string": {
    "prefix": "ccfs",
    "body": "cmd.Flags().StringP(\"${1:name}\", \"${2:shorthand}\", \"${3:value}\", \"${4:usage}\")",
    "description": "Snippet for cobra flag string"
  },
  "cobra cmd flag bool": {
    "prefix": "ccfs",
    "body": "cmd.Flags().BoolP(\"${1:name}\", \"${2:shorthand}\", \"${3:value}\", \"${4:usage}\")",
    "description": "Snippet for cobra flag bool"
  },
  "std fmt errorf": {
    "prefix": "sfe",
    "body": "fmt.Errorf(\"$1 failed: %v\", err)",
    "description": "Snippet for fmt Errorf"
  },
  "slog error": {
    "prefix": "sle",
    "body": "slog.Error(\"$1\")",
    "description": "Snippet slog error"
  },
  "slog info": {
    "prefix": "sli",
    "body": "slog.Info(\"$1\")",
    "description": "Snippet slog info"
  }
}
